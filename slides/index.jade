!!! 5 
// Google HTML5 slide template   
// Authors: Luke Mahé (code)
//          Marcin Wichary (code and design)
//          Dominic Mazzoni (browser compatibility)
//          Charles Chen (ChromeVox support)  
// URL: http://code.google.com/p/html5slides/
html
  head
    title 
    meta(charset="utf-8")
    script(src="./slides.js")

  body(style='display: none')
    section(class="slides layout-regular template-default")  

      article
        h1 静岡Developers勉強会(node.jsハンズオン)
        h2 Express + now.jsでリアルタイムお絵描きサービスをつくろう
        p kzfm (Jun 30, 2012)

      article
        h3 はじめに
        p 資料は
          a(href="https://github.com/kzfm/shizdraw") GitHub
          にあります
        pre git clone git@github.com:kzfm/shizdraw.git
        p またはzipでダウンロード
        p 簡易HTTPサーバーはpythonの場合
        pre.
          cd slides
          python -m SimpleHTTPServer
          # http://localhost:8000/にアクセスするとスライドが始まります

      article.nobackground
        h3 完成品 (リアルタイムでお絵描きが反映されます)
        iframe(src='http://young-samurai-3442.herokuapp.com/')

      article
        h3 自己紹介
        ul
          li twitter:kzfm
          li http://blog.kzfmix.com
          li Python,CoffeeScript,(Haskell見習い)
          li 研究したりしなかったりというのが仕事
          ul: li (する期としない期が交互にあって今はしない期です:-))
          img(style="width: 400px", src="images/1py1.jpg")

      article
        h1 今日覚えてほしいもの
        ul.build
          li ナウなヤングのnow.js
          li お手軽WAFのExpress
          li (javascript + Python + Ruby) / 3 なCoffeeScript

      article
        h1 楽勝ですね ♪
        p このセッションのテーマはお手軽さの追求です

      article
        ul
          li: a(href="http://nowjs.com/doc/nowjs")
            img(src="http://nowjs.com/images/nowlogo.png")
        p nowというサーバーにもクライアントにも同時に存在するかのように振る舞うオブジェクトを提供する
        pre.
          // On the server
          // Sets the value of every client's `now.x` to 'test'
          everyone.now.x = 'test';
          
          // Calls a function named `test` on every client, ignoring clients that do not have `now.test`
          everyone.now.test();

      article
        h3 特徴
        ul.build
          li 変数が共有されてる感じでコーディングできる
          li 勝手にフォールバックしてくれる(後ろでSocket.ioが動いている)
          li websoketのチマチマしたコードを書かなくていい
          li 詳しく知りたければ
            a(href="http://www.amazon.co.jp/dp/4798028215/") 徹底解説 HTML5 APIガイドブック コミュニケーション系API編
            を読むといいです

      article
        h2 Express

      article
        h3 Expressとは何か? 
        ul
          li Node.js用のWAF
          li Sinatra(ruby)クローン
        pre.
          var app = express.createServer();
          
          app.get('/', function(req, res){
            res.send('Hello World');
          });
          
          app.listen(3000);

      article
        h3 Jadeとは何か? 
        ul
          li Expressのデフォルトのテンプレートエンジン
          li インデントでネストを表現
          pre.
            article
            h3 Jadeとは何か? 
            ul
              li Expressのデフォルトのテンプレートエンジン
              li インデントでネストを表現
          li このスライドもJade->HTML5に変換してるので参考にしてください

      article
        h1 スキャフォールドも用意してくれるのでとっつきやすい ♪
        p マニュアルも日本語化されているので興味がわいたら読めばいいです。
      
      article
        h2 CoffeeScript

      article.nobackground
        iframe(src='http://coffeescript.org/')

      article
        h3 (私版)CoffeeScriptの何がいいの?
        ul.build
          li function が ->
          li bindが=>
          li 中括弧不要(インデント)
          li クラスの宣言が便利
          li thisを@
          li 文字列埋め込み楽ちん "変数は\#{var}"
          li リスト内包表記が使える
          li for in, for ofループが楽
          li ifの後置(perlみたい)

      article
        h3 (注意) CoffeeScript
        ul.build
          li javascriptにコンパイルするだけなので結局javascriptがわからないとデバッグできない
          li 他言語(Ruby,Python)を知らないと学習コストが無駄にかかる
          li 自分に合っているかどうかは各自で判断してください

      article
        h3 詳しくは本を買いましょう
        ul
          li: img(width="400px", src="images/417zJnV-ydL._SL500_AA300_.jpg")

      article
        h1 一通り説明したのでハンズオン開始
        p 流れはgithubのREADMEに書いてあるので見ながらやってください。
